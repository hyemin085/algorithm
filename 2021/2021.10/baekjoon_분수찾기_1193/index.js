const fs = require("fs");
const filePath = process.platform === "linux" ? "/dev/stdin" : "./input01.txt";
let input = fs.readFileSync(filePath).toString().trim().split("\n");

let num = Number(input[0]);
let count = 0;

while (num > 0) {
  count += 1;
  num -= count;
  console.log(count, num);
}

if (count % 2 === 0) {
  console.log(`${count + num}/${1 - num}`);
} else {
  console.log(`${1 - num}/${count + num}`);
}

//숫자를 입력받아서 1/1부터 지그재그로 숫자를 읽을 때 입력받은 num번째에 있는 분수를 출력해야 합니다.
//
// 일단 지그재그로 읽을 때 첫번째엔 1/1 하나이고 두번째 대각선은 1/2,2/1 이렇게 두개, 세번째 대각선은 3/1,2/2,1/3 이렇게 세개입니다.
//
// 이렇게 대각선 하나에 속하는 분수가 한개씩 늘어나므로 한 대각선에 속하는 분수의 개수는 1, 2, 3, 4, 5... 이런식으로 등차수열이 됩니다.
//
// 따라서 입력받은수가 14이면 5번째 대각선에 속하며 1+2+3+4+ 4이죠.
//
// 그럼 5번째 대각선에 4번째 분수를 출력하게 되면 됩니다.
//
// 대각선은 지그재그로 읽기때문에 i번째 대각선은 오른쪽상단부터 내려오면서 읽는지 왼쪽하단부터 올라오면서 읽는지 봐야하는데 i가 짝수이면 위에서 부터 읽고 홀수이면 밑에서 부터 읽습니다.
//
// 그래서 if(i%2==0)라는 조건을 걸어주었습니다.
//
// tmp에는 앞에 있는 분수의 개수를 카운트하고 num이 5번째 대각선에 있는 분수라면 num은 1+2+3+4+?일 것이므로 tmp보다는 크고 tmp+i보다는 같거나 작을 것 입니다.
//
// 그러니 1~n-1까지의 숫자를 다 더한뒤 num에서 그 수를 빼면 n번째 대각선에 몇번째에 있는지 알 수 있는데 n이 짝수인지 홀수인지 판별하고 짝수이면 분모가 n이고 분자가 1로 시작해서 대각선으로 내려갈수록 분모는 1씩 작아지고 분자는 1씩 커집니다.
//
// 홀수이면 그 반대입니다.
//
// 이렇게 분모와 분자를 각각 구해서 출력해줍니다.
